{application,norm,
             [{modules,['Elixir.Inspect.Norm.Core.Alt',
                        'Elixir.Inspect.Norm.Core.AnyOf',
                        'Elixir.Inspect.Norm.Core.Collection',
                        'Elixir.Inspect.Norm.Core.Schema',
                        'Elixir.Inspect.Norm.Core.Selection',
                        'Elixir.Inspect.Norm.Core.Spec',
                        'Elixir.Inspect.Norm.Core.Spec.And',
                        'Elixir.Inspect.Norm.Core.Spec.Or','Elixir.Norm',
                        'Elixir.Norm.Conformer',
                        'Elixir.Norm.Conformer.Conformable',
                        'Elixir.Norm.Conformer.Conformable.Atom',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.AllOf',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Alt',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.AnyOf',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Collection',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Delegate',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Schema',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Selection',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Spec',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Spec.And',
                        'Elixir.Norm.Conformer.Conformable.Norm.Core.Spec.Or',
                        'Elixir.Norm.Conformer.Conformable.Norm.Generator',
                        'Elixir.Norm.Conformer.Conformable.Tuple',
                        'Elixir.Norm.Contract','Elixir.Norm.Core.AllOf',
                        'Elixir.Norm.Core.Alt','Elixir.Norm.Core.AnyOf',
                        'Elixir.Norm.Core.Collection',
                        'Elixir.Norm.Core.Delegate','Elixir.Norm.Core.Schema',
                        'Elixir.Norm.Core.Selection','Elixir.Norm.Core.Spec',
                        'Elixir.Norm.Core.Spec.And',
                        'Elixir.Norm.Core.Spec.Or','Elixir.Norm.Generatable',
                        'Elixir.Norm.Generatable.Norm.Generator',
                        'Elixir.Norm.Generator','Elixir.Norm.GeneratorError',
                        'Elixir.Norm.GeneratorLibraryError',
                        'Elixir.Norm.MismatchError','Elixir.Norm.SpecError']},
              {optional_applications,[stream_data]},
              {applications,[kernel,stdlib,elixir,stream_data]},
              {description,"Norm is a system for specifying the structure of data. It can be used for\nvalidation and for generation of data. Norm does not provide any set of\npredicates and instead allows you to re-use any of your existing\nvalidations.\n"},
              {registered,[]},
              {vsn,"0.13.1"},
              {env,[{enable_contracts,true}]}]}.
